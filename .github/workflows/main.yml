name: Deploy workflow

on:
  workflow_run:
    workflows: ["Tests workflow"]
    branches: [main]
    types: [completed]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest

      - name: Build and push gateway
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest

      - name: Copy docker-compose.yml via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "kittygram"

      - name: Run deployment commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd kittygram
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /staticfiles/

      - name: Send success notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            *Деплой успешно выполнен!*
            
            *Проект:* ${{ github.repository }}
            *Ветка:* ${{ github.ref_name }}
            *Инициатор:* ${{ github.actor }}
            *Коммит:* [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            
            *Сообщение коммита:*
            ```
            ${{ github.event.commits[0].message }}
            ```
            
            *Детали:*
            ▫️ *Backend:* ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest
            ▫️ *Frontend:* ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest
            ▫️ *Gateway:* ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest

        env:
          TELEGRAM_MARKDOWN: true